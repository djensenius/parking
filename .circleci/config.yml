# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/ruby:2.7.1-node-browsers
        environment:
          - PG_HOST=localhost
          - PG_USER=ubuntu
          - RAILS_ENV=test
          - RACK_ENV=test
      - image: circleci/postgres:12.3
        environment:
          - POSTGRES_USER=ubuntu
          - POSTGRES_DB=db_name
          - POSTGRES_HOST_AUTH_METHOD: trust
    working_directory: ~/repo

    steps:
      - checkout
      - run:
          command: "[[ ! -s \"$(git rev-parse --git-dir)/shallow\" ]] || git fetch --unshallow"

      # Download and cache dependencies
      - restore_cache:
          keys:
          - gem-cache-{{ arch }}-{{ checksum "Gemfile.lock" }}
          # - v1-dependencies-{{ checksum "Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          # - v1-dependencies-

      - run:
          name: Install dependencies
          command: |
            sudo apt-get install cmake python-pip yamllint python3-pkg-resources
            gem install bundler
            npm install
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          key: gem-cache-{{ arch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
            - ~/.cache/npm

      # Database setup
      - run:
          name: Load DB
          command: bundle exec rake db:schema:load
          environment:
            DATABASE_URL: "postgres://ubuntu@localhost:5432/db_name"

      # run tests!
      - run:
          name: Rubocop
          command: |
            mkdir /tmp/test-results
            bundle exec rubocop

      - run:
          name: Rake test
          command: bundle exec rake test
          environment:
            DATABASE_URL: "postgres://ubuntu@localhost:5432/db_name"

      - run:
          name: YAML lint
          command: yamllint config/locales/

      - run:
          name: NPM lint
          command: npm lint

      - run:
          name: Stylelint
          command: npm stylelint

      - run:
          name: Yart test && CodeCov
          command: npm run codecov

      # collect reports
      - store_test_results:
          path: /tmp/test-results

      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

